#!/bin/bash

CYCLERESQUE="false"
KILLEM="false"
DEBUG="false"

# Parse the passed args
while getopts dkh flag; do
    case $flag in
      k)
        KILLEM="true"
        ;;
      d)
        DEBUG="true"
        ;;
      h)
         echo "Run from engineyard thus:"; echo
         echo "    ey ssh /data/Tout/$0 --utilities -t -e ToutProduction"; echo
         echo "Run the script with -k to kill off the stale workers"
         echo "Run the script with -d to kill off non-stale workers (test mode)"
         exit
         ;;
      \?)
         echo "Invalid option: $OPTARG" >&2
         exit
         ;;
     esac
done
shift $(( OPTIND - 1 ))
echo Passed parameters are $*

if [ "$CYCLERESQUE" == "true" ]; then
    echo -e "\033[1mRequesting shutdown of workers...\033[0m"
    sudo monit stop -g Tout_resque;

    echo -e "\033[1mWaiting for a bit...\033[0m"
    sleep 3
fi

echo -e "\033[1mPreview of stuck workers...\033[0m"
if [ "$DEBUG" != "true" ]; then
    PIDS=$(ps aux |grep -P "\S+\s+\S+\s+\d+\.\d+\s+\d+\.\d+\s+\d+\s+\d+\s+\S+\s+\S+\s+[A-Z][a-z]*\d\d\s+" \
    | grep 'Processing ' | awk '{print $2}')
else
    echo "Inverting the date check"
    PIDS=$(ps aux |grep -P "\S+\s+\S+\s+\d+\.\d+\s+\d+\.\d+\s+\d+\s+\d+\s+\S+\s+\S+\s+\S+:\S+\s+" \
    | grep 'Processing ' |grep -v grep | awk '{print $2}')
fi
echo Targeting processes: [ $PIDS ]

if [ "$KILLEM" == "true" ]; then
  if [ "$PIDS" != "" ]; then
    echo -e "\033[1mForcefully killing stuck worker jobs...\033[0m"
    kill -9 $PIDS

    echo -e "\033[1mWaiting for a bit before killing recommences...\033[0m"
    sleep 5

    echo -e "\033[1mForcefully killing stuck workers (again, just to be sure)...\033[0m"
    kill -9 $PIDS
   else
    echo -e "\033[1mNothing to kill :-)\033[0m"   
    fi
fi

if [ "$CYCLERESQUE" == "true" ]; then
    echo -e "\033[1mRestarting the queues\033[0m"
    sudo monit start -g Tout_resque
fi
